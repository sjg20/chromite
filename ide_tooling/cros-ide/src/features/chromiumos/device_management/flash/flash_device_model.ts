// Copyright 2022 The ChromiumOS Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

import * as buildModel from './../builds/build_model';

export type FlashDeviceViewState = {
  readonly step: FlashDeviceStep;
  readonly buildSelectionType: BuildSelectionType;
  readonly hostname: string;
  readonly board: string;
  readonly buildChannel: BuildChannel;
  readonly buildInfo?: BuildInfo;
  readonly flashCliFlags: string[];
  readonly flashProgress: number; // From 0.0 to 1.0
  readonly flashingComplete: boolean;
  readonly flashError: string;
};

export type BuildChannel = buildModel.BuildChannel;

export enum FlashDeviceStep {
  HIGH_LEVEL_BUILD_SELECTION,
  BUILD_BROWSER,
  FLASH_CONFIRMATION,
  FLASH_PROGRESS,
}

export enum BuildSelectionType {
  LATEST_OF_CHANNEL,
  SPECIFIC_BUILD,
  // LOCAL_CROS_REPO,
}

export type FlashFlag = {
  readonly label: string;
  readonly cliFlag: string;
  readonly help: string;
};

// Should be listed from most to least popular, since the top n will be more visible.
export const FLASH_FLAGS: FlashFlag[] = [
  {
    label: "Don't reboot afterwards",
    cliFlag: '--no-reboot',
    help: '',
  },
  {
    label: 'Clobber the stateful partition (user data)',
    cliFlag: '--clobber-stateful',
    help: 'Recommend to set clear-tpm-owner to true when this option is true',
  },
  {
    label: 'Clear the TPM owner on reboot',
    cliFlag: '--clear-tpm-owner',
    help: '',
  },
  {
    label: 'Disable rootfs verification after update is completed.',
    cliFlag: '--disable-rootfs-verification',
    help: '',
  },
  {
    label: 'Force',
    cliFlag: '--force',
    help: 'Ignore confidence checks, just do it.',
  },
  {
    label: 'Clear cache of images and payloads',
    cliFlag: '--clear-cache',
    help: 'Clears the  devserver static directory. This deletes all the downloaded images and payloads, and also payloads generated by the devserver. Default is not to clear.',
  },
  {
    label: 'Do not wipe the temporary working directory',
    cliFlag: '--no-wipe',
    help: '',
  },
  {
    label: 'Do not update the stateful partition on the device',
    cliFlag: '--no-stateful-update',
    help: '',
  },
  {
    label: 'Do not update the rootfs partition on the device',
    cliFlag: '--no-rootfs-update',
    help: '',
  },
  {
    label: 'Do update the minios partition on the device',
    cliFlag: '--minios-update',
    help: '',
  },
  {
    label: 'Do not ping the device before attempting to connect to it',
    cliFlag: '--no-ping',
    help: '',
  },
  {
    label: 'Send payload in parallel',
    cliFlag: '--send-payload-in-parallel',
    help: 'To speed up transfer payload files for long haul, chop payload in chunks and transfer them in parallel.',
  },
  {
    label: 'Do not copy the update payloads to the device.',
    cliFlag: '--no-copy-payloads-to-device',
    help: 'For now this only works for the stateful payload.',
  },
  {
    label: 'Use the faster version of cros flash (experimental)',
    cliFlag: '--exp-new-flash',
    help: '',
  },
  {
    label: 'Enable delta compression for image bytes.',
    cliFlag: '--delta',
    help: '',
  },
];

export type BuildInfo = {
  readonly chromeVersion: string;
  readonly chromeMilestone: string;
  readonly chromeOsVersion: string;
  readonly arcVersion: string;
  readonly arcBranch: string;
  readonly buildChannel: BuildChannel;
  readonly date: Date;
};

export interface CloseMessage {
  command: 'close';
}

export interface FlashMessage {
  command: 'flash';
  state: FlashDeviceViewState;
}

/** Messages from the view to the panel controller. */
export type FlashDeviceViewMessage = CloseMessage | FlashMessage;

export interface FlashProgressUpdate {
  command: 'flashProgressUpdate';

  /** Progress from 0.0 to 1.0 inclusively. */
  progress: number;
}

export interface FlashComplete {
  command: 'flashComplete';
}

export interface FlashError {
  command: 'flashError';
  errorMessage: string;
}

/** Messages from the panel controller to the view.  */
export type FlashDevicePanelMessage =
  | FlashProgressUpdate
  | FlashComplete
  | FlashError;
