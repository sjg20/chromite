{
  "name": "cros-ide",
  "displayName": "CrOS IDE",
  "description": "Chrome OS Development",
  "version": "0.0.9",
  "publisher": "Google",
  "author": {
    "name": "ChromeOS Velocity Team at Google"
  },
  "repository": "https://chromium.googlesource.com/chromiumos/chromite/+/HEAD/ide_tooling",
  "engines": {
    "vscode": "^1.60.0"
  },
  "categories": [
    "Linters",
    "Other",
    "Programming Languages",
    "Testing"
  ],
  "activationEvents": [
    "onCommand:cros-ide.addHost",
    "onCommand:cros-ide.deleteHost",
    "onCommand:cros-ide.connectToHostForScreen",
    "onCommand:cros-ide.connectToHostForShell",
    "onCommand:cros-ide.refreshCrosfleet",
    "onCommand:cros-ide.addFleetHost",
    "onCommand:cros-ide.codeSearchOpenCurrentFile",
    "onCommand:cros-ide.codeSearchSearchForSelection",
    "onCommand:cros-ide.fileIdeBug",
    "onView:static-devices",
    "onView:fleet-devices",
    "onView:boards-packages",
    "onLanguage:cpp",
    "onLanguage:gn",
    "onLanguage:go",
    "onLanguage:python",
    "onLanguage:shellscript"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "cros-ide.connectToHostForScreen",
        "title": "CrOS: Connect to Host (VNC)",
        "icon": "$(window)",
        "enablement": "config.cros-ide.underDevelopment.dutManager"
      },
      {
        "command": "cros-ide.connectToHostForShell",
        "title": "CrOS: Connect to Host (Shell)",
        "icon": "$(terminal)",
        "enablement": "config.cros-ide.underDevelopment.dutManager"
      },
      {
        "command": "cros-ide.addHost",
        "title": "CrOS: Add New Host",
        "icon": "$(add)",
        "enablement": "config.cros-ide.underDevelopment.dutManager"
      },
      {
        "command": "cros-ide.deleteHost",
        "title": "CrOS: Delete Host",
        "icon": "$(remove)",
        "enablement": "config.cros-ide.underDevelopment.dutManager"
      },
      {
        "command": "cros-ide.refreshCrosfleet",
        "title": "CrOS: Refresh crosfleet devices",
        "icon": "$(refresh)",
        "enablement": "config.cros-ide.underDevelopment.dutManager"
      },
      {
        "command": "cros-ide.addFleetHost",
        "title": "CrOS: Add crosfleet Host",
        "icon": "$(add)",
        "enablement": "config.cros-ide.underDevelopment.dutManager"
      },
      {
        "command": "cros-ide.refreshBoardsPackages",
        "title": "CrOS: Refresh Boards and Packages",
        "icon": "$(refresh)"
      },
      {
        "command": "cros-ide.codeSearchOpenCurrentFile",
        "title": "Open in Code Search"
      },
      {
        "command": "cros-ide.codeSearchSearchForSelection",
        "title": "Search for selection in Code Search"
      },
      {
        "command": "cros-ide.crosWorkonStart",
        "title": "Start Working on a new Package",
        "icon": "$(add)"
      },
      {
        "command": "cros-ide.crosWorkonStop",
        "title": "Stop Working On",
        "icon": "$(remove)"
      },
      {
        "command": "cros-ide.selectBoard",
        "title": "CrOS: Select target board"
      },
      {
        "command": "cros-ide.fileIdeBug",
        "title": "CrOS IDE: File a bug on Buganizer"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "cros-devices",
          "title": "CrOS Development",
          "icon": "media/cros-device.svg"
        }
      ]
    },
    "views": {
      "cros-devices": [
        {
          "id": "static-devices",
          "name": "My Devices",
          "when": "config.cros-ide.underDevelopment.dutManager"
        },
        {
          "id": "fleet-devices",
          "name": "Crosfleet Devices",
          "when": "config.cros-ide.underDevelopment.dutManager"
        },
        {
          "id": "boards-packages",
          "name": "Boards and Packages"
        }
      ]
    },
    "menus": {
      "editor/context": [
        {
          "command": "cros-ide.codeSearchOpenCurrentFile"
        },
        {
          "command": "cros-ide.codeSearchSearchForSelection"
        }
      ],
      "view/title": [
        {
          "command": "cros-ide.addHost",
          "when": "view == static-devices",
          "group": "navigation"
        },
        {
          "command": "cros-ide.addFleetHost",
          "when": "view == fleet-devices",
          "group": "navigation"
        },
        {
          "command": "cros-ide.refreshCrosfleet",
          "when": "view == fleet-devices",
          "group": "navigation"
        },
        {
          "command": "cros-ide.refreshBoardsPackages",
          "when": "view == boards-packages",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "cros-ide.connectToHostForScreen",
          "when": "view == static-devices || view == fleet-devices",
          "group": "inline@1"
        },
        {
          "command": "cros-ide.connectToHostForShell",
          "when": "view == static-devices || view == fleet-devices",
          "group": "inline@2"
        },
        {
          "command": "cros-ide.deleteHost",
          "when": "view == static-devices || view == fleet-devices",
          "group": "inline@3"
        },
        {
          "command": "cros-ide.crosWorkonStart",
          "when": "view == boards-packages && viewItem == board",
          "group": "inline"
        },
        {
          "command": "cros-ide.crosWorkonStop",
          "when": "view == boards-packages && viewItem == package",
          "group": "inline"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "static-devices",
        "contents": "No host added yet.\n[Add New Host](command:cros-ide.addHost)"
      },
      {
        "view": "boards-packages",
        "contents": "No boards have been set up yet. Visit [the developer guide](https://chromium.googlesource.com/chromiumos/docs/+/HEAD/developer_guide.md#Select-a-board) to learn how to select a board and initialize the build."
      }
    ],
    "configuration": {
      "title": "CrOS IDE",
      "properties": {
        "cros-ide.board": {
          "type": "string",
          "description": "The board to use on commands such as emerge"
        },
        "cros-ide.codeSearch": {
          "type": "string",
          "enum": [
            "public",
            "internal",
            "gitiles"
          ],
          "description": "Code Search instance to open files in",
          "default": "public"
        },
        "cros-ide.underDevelopment.dutManager": {
          "type": "boolean",
          "description": "Enable DUT Manager (incomplete)",
          "default": false
        },
        "cros-ide.underDevelopment.testCoverage": {
          "type": "boolean",
          "description": "Enable Test Coverage (incomplete)",
          "default": false
        },
        "cros-ide.hosts": {
          "type": "array",
          "scope": "machine-overridable",
          "description": "List of devices under testing",
          "items": {
            "type": "string"
          }
        },
        "cros-ide.clangdSupport.crosWorkonPrompt": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "Always",
            "Never",
            "Once"
          ],
          "description": "Automatically run cros_workon, without prompting the user",
          "default": "Once"
        }
      }
    },
    "languages": [
      {
        "id": "shellscript",
        "extensions": [
          ".eclass"
        ],
        "aliases": [
          "Eclass"
        ]
      },
      {
        "id": "gn",
        "extensions": [
          ".gn",
          ".gni"
        ]
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "lint": "eslint src --ext ts",
    "test": "npm run compile-tests && npm run compile && npm run lint && xvfb-run -a node ./out/test/runTest.js",
    "unit-test": "npm run compile-tests && node ./node_modules/mocha/bin/_mocha -u tdd --timeout 5000 --colors ./out/test/unit",
    "publish": "./install.sh --upload"
  },
  "devDependencies": {
    "@types/glob": "^7.1.4",
    "@types/mocha": "^9.0.0",
    "@types/node": "^12.16.1",
    "@types/vscode": "^1.60.0",
    "@typescript-eslint/eslint-plugin": "^5.1.0",
    "@typescript-eslint/parser": "^5.1.0",
    "@vscode/test-electron": "^1.6.2",
    "eslint": "^7",
    "eslint-config-google": "^0.14.0",
    "glob": "^7.1.7",
    "mocha": "^9.1.3",
    "ts-loader": "~9.2.6",
    "typescript": "^4.5.5",
    "webpack": "~5.3.2",
    "webpack-cli": "~3.3.11"
  }
}
