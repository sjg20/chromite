# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: chromiumos/test/lab/api/cbi.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='chromiumos/test/lab/api/cbi.proto',
  package='chromiumos.test.lab.api',
  syntax='proto3',
  serialized_options=b'Z1go.chromium.org/chromiumos/config/go/test/lab/api',
  serialized_pb=b'\n!chromiumos/test/lab/api/cbi.proto\x12\x17\x63hromiumos.test.lab.api\"\x1b\n\x03\x43\x62i\x12\x14\n\x0craw_contents\x18\x01 \x01(\tB3Z1go.chromium.org/chromiumos/config/go/test/lab/apib\x06proto3'
)




_CBI = _descriptor.Descriptor(
  name='Cbi',
  full_name='chromiumos.test.lab.api.Cbi',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='raw_contents', full_name='chromiumos.test.lab.api.Cbi.raw_contents', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=62,
  serialized_end=89,
)

DESCRIPTOR.message_types_by_name['Cbi'] = _CBI
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Cbi = _reflection.GeneratedProtocolMessageType('Cbi', (_message.Message,), {
  'DESCRIPTOR' : _CBI,
  '__module__' : 'chromiumos.test.lab.api.cbi_pb2'
  # @@protoc_insertion_point(class_scope:chromiumos.test.lab.api.Cbi)
  })
_sym_db.RegisterMessage(Cbi)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
