# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: chromiumos/test/api/v1/plan.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from chromite.api.gen_sdk.chromiumos.test.api import coverage_rule_pb2 as chromiumos_dot_test_dot_api_dot_coverage__rule__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n!chromiumos/test/api/v1/plan.proto\x12\x16\x63hromiumos.test.api.v1\x1a\'chromiumos/test/api/coverage_rule.proto\"\x9f\x01\n\nHWTestPlan\x12\x39\n\x02id\x18\x01 \x01(\x0b\x32-.chromiumos.test.api.v1.HWTestPlan.TestPlanId\x12\x39\n\x0e\x63overage_rules\x18\x02 \x03(\x0b\x32!.chromiumos.test.api.CoverageRule\x1a\x1b\n\nTestPlanId\x12\r\n\x05value\x18\x01 \x01(\t\"\x9f\x01\n\nVMTestPlan\x12\x39\n\x02id\x18\x01 \x01(\x0b\x32-.chromiumos.test.api.v1.VMTestPlan.TestPlanId\x12\x39\n\x0e\x63overage_rules\x18\x02 \x03(\x0b\x32!.chromiumos.test.api.CoverageRule\x1a\x1b\n\nTestPlanId\x12\r\n\x05value\x18\x01 \x01(\tB>Z<go.chromium.org/chromiumos/config/go/test/api/v1;test_api_v1b\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'chromiumos.test.api.v1.plan_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z<go.chromium.org/chromiumos/config/go/test/api/v1;test_api_v1'
  _HWTESTPLAN._serialized_start=103
  _HWTESTPLAN._serialized_end=262
  _HWTESTPLAN_TESTPLANID._serialized_start=235
  _HWTESTPLAN_TESTPLANID._serialized_end=262
  _VMTESTPLAN._serialized_start=265
  _VMTESTPLAN._serialized_end=424
  _VMTESTPLAN_TESTPLANID._serialized_start=235
  _VMTESTPLAN_TESTPLANID._serialized_end=262
# @@protoc_insertion_point(module_scope)
